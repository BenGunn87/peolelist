{"version":3,"sources":["../node_modules/random-id sync","serviceWorker.js","components/MainMenu.js","model/people.js","stores/peopleStore.js","stores/tableStore.js","stores/viewStore.js","stores/rootStore.js","components/EditForm/EditForm.js","components/EditForm/index.js","components/PeopleCards.js","views/CardListView.js","components/SearchableTable.js","components/PeopleTable/PeopleTable.js","components/PeopleTable/index.js","views/PeopleTableView.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Boolean","window","location","hostname","match","MainMenu","selectedKey","this","props","pathname","react_default","a","createElement","menu","style","width","defaultSelectedKeys","selectedKeys","theme","mode","Item","key","react_router_dom","to","React","Component","withRouter","url","getPeople","fetch","then","response","json","_ref","results","catch","alert","PeopleStore","rootstore","_this","Object","classCallCheck","addKey","man","objectSpread","randomId","putPeople","people","peopleArray","forEach","push","delPeople","filter","item","indexOf","addMan","unshift","editMan","ind","getManIndByKey","i","length","getManByKey","sKey","fieldList","loaded","_this2","map","obj","field","decorate","observable","peopleCount","computed","action","TableStore","searchText","searchIndex","selectedRowKeys","setSearchData","setSelectedRowKeys","isSelected","ViewStore","visibleEditForm","toggleVisibleEditForm","rootStore","RootStore","peopleStore","peopleTableStore","viewStore","Option","Select","fieldsList","FormStore","arguments","undefined","onNameChange","name","target","value","nameError","onGenderChange","gender","genderError","onHeightChange","height","heightError","onMassChange","mass","massError","setError","errorList","concat","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_decorate","defineProperty","err","return","validate","store","EditForm","possibleConstructorReturn","getPrototypeOf","call","handleOk","formStore","resMan","_this$props","visible","handleCancel","title","_this$formStore","_this$formStore2","_this$formStore3","modal","onCancel","footer","es_button","onClick","type","row","col","span","className","htmlFor","paddingBottom","input","defaultValue","onChange","es_alert","message","banner","es_select","input_number","min","max","observer","EditFormContainer","inject","components_EditForm_EditForm","CardContent","Fragment","PeopleCards","dataSource","onEditClick","rows","rowNum","titleField","slice","gutter","marginBottom","card","bordered","extra","icon","PeopleCards_CardContent","shift","padding","CardListView","paddingTop","components_PeopleCards","SearchableTable","onSelectChange","tableStore","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","confirm","clearFilters","ref","node","searchInput","placeholder","onPressEnter","handleSearch","display","size","marginRight","handleReset","filterIcon","filtered","color","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","index","main_default","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","rowSelection","hideDefaultSelections","columns","searchFields","restProps","objectWithoutProperties","table","assign","PeopleTable","_this$props$peopleSto","onDelButtonClick","onAddButtonClick","data-count","marginTop","disabled","components_SearchableTable","PeopleTableContainer","components_PeopleTable_PeopleTable","PeopleTableView","components_PeopleTable","Sider","Layout","Content","App","components_EditForm","layout","overflow","position","left","components_MainMenu","marginLeft","react_router","path","component","ReactDOM","mobx_react_module","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d66a117e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 236;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Menu } from 'antd'\r\n\r\nclass MainMenu extends React.Component {\r\n  render() {\r\n    const selectedKey = this.props.location.pathname === '/cardlist' ? '2' : '1';\r\n    return (\r\n      <Menu\r\n        style={{ width: 200 }}\r\n        defaultSelectedKeys={['1']}\r\n        selectedKeys={[selectedKey]}\r\n        theme=\"dark\"\r\n        mode=\"inline\"\r\n      >\r\n        <Menu.Item key=\"1\">\r\n          <Link to='/peopletable'>Таблица</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <Link to='/cardlist'>Карточки</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MainMenu);","const url = 'https://swapi.co/api/people/';\r\n\r\nexport function getPeople() {\r\n  return fetch(url)\r\n    .then(function (response) {\r\n      return response.json();\r\n    })\r\n    .then(function ({results}) {\r\n      return results;\r\n    })\r\n    .catch(alert);\r\n}\r\n\r\n","import { observable, action, decorate, computed } from 'mobx'\r\nimport  randomId  from 'random-id'\r\nimport { getPeople } from '../model/people'\r\n\r\nclass PeopleStore {\r\n  constructor(rootstore) {\r\n    this.fieldList = ['name', 'gender', 'height', 'mass'];\r\n    this.rootstore = rootstore;\r\n    this.people = [];\r\n    this.loaded = false;\r\n    this.fetch();\r\n  }\r\n  get peopleCount() {\r\n    return this.people.length;\r\n  }\r\n  fetch() {\r\n    this.loaded = false;\r\n    getPeople()\r\n      .then(people => {\r\n        this.putPeople(people.map( item => {\r\n          const obj = {};\r\n            this.fieldList.forEach(field => obj[field] = item[field]);\r\n            return obj;\r\n          }\r\n        ));\r\n        this.loaded = true;\r\n      });\r\n  }\r\n  addKey = man => {\r\n    return {key: randomId(), ...man};\r\n  };\r\n  putPeople = people => {\r\n    const peopleArray = [];\r\n    people.forEach(man => {\r\n      peopleArray.push(this.addKey(man));\r\n    });\r\n    this.people = peopleArray;\r\n  };\r\n  delPeople = keys => {\r\n    this.people = this.people.filter(item => keys.indexOf(item.key) === -1);\r\n  };\r\n  addMan = man => {\r\n    this.people.unshift(this.addKey(man));\r\n  };\r\n  editMan = (key, man) => {\r\n    const ind = this.getManIndByKey(key);\r\n    this.people[ind] = man;\r\n    this.people[ind].key = key;\r\n  };\r\n  getManIndByKey = key => {\r\n    for (let i = 0; i < this.people.length; i++) {\r\n      if (this.people[i].key === key) return i;\r\n    }\r\n    return -1;\r\n  };\r\n  getManByKey = sKey => {\r\n    return this.people.filter( ({key}) => (key === sKey))[0];\r\n  }\r\n}\r\ndecorate(PeopleStore, {\r\n  people: observable,\r\n  loaded: observable,\r\n  peopleCount: computed,\r\n  putPeople: action,\r\n  addMan: action,\r\n  editMan: action,\r\n  delPeople: action\r\n});\r\n\r\nexport default PeopleStore;","import {observable, action, decorate, computed} from 'mobx'\r\n\r\nclass TableStore {\r\n  searchText = '';\r\n  searchIndex = '';\r\n  selectedRowKeys = [];\r\n  constructor(rootstore) {\r\n    this.rootstore = rootstore;\r\n  };\r\n  get isSelected() {\r\n    return this.selectedRowKeys.length !== 0;\r\n  };\r\n  setSearchData = (searchText, searchIndex) => {\r\n    this.searchText = searchText;\r\n    this.searchIndex = searchIndex;\r\n  };\r\n  setSelectedRowKeys = selectedRowKeys => {\r\n    this.selectedRowKeys = selectedRowKeys\r\n  }\r\n}\r\n\r\ndecorate(TableStore, {\r\n  searchText: observable,\r\n  searchIndex: observable,\r\n  selectedRowKeys: observable,\r\n  isSelected: computed,\r\n  setSearchData: action,\r\n  setSelectedRowKeys: action\r\n});\r\n\r\nexport default TableStore;","import { observable, action, decorate } from 'mobx'\r\n\r\nclass ViewStore {\r\n  visibleEditForm = false;\r\n  key = '';\r\n  constructor(rootstore) {\r\n    this.rootstore = rootstore;\r\n  };\r\n  toggleVisibleEditForm = () => {\r\n    return this.visibleEditForm = !this.visibleEditForm;\r\n  }\r\n}\r\n\r\ndecorate(ViewStore, {\r\n  visibleEditForm: observable,\r\n  toggleVisibleEditForm: action\r\n});\r\n\r\nexport default ViewStore;","import PeopleStore from './peopleStore'\r\nimport TableStore from './tableStore'\r\nimport ViewStore from './viewStore'\r\n\r\nclass RootStore {\r\n  constructor() {\r\n    this.peopleStore = new PeopleStore(this);\r\n    this.peopleTableStore = new TableStore(this);\r\n    this.viewStore = new ViewStore(this);\r\n  }\r\n}\r\n\r\nconst rootStore = new RootStore();\r\n\r\nexport default rootStore;","import React from 'react'\r\nimport { Modal, Button, Row, Col, InputNumber, Input, Select, Alert } from 'antd'\r\nimport { observer } from 'mobx-react'\r\nimport { decorate, observable, action} from \"mobx\";\r\nimport rootStore from \"../../stores/rootStore\";\r\n\r\nconst { Option } = Select;\r\nconst fieldsList = rootStore.peopleStore.fieldList;\r\n\r\nclass FormStore {\r\n  constructor(man = {}) {\r\n    for (let field of fieldsList) {\r\n      this[field] = man[field];\r\n      this[`${field}Error`] = false;\r\n      decorate(this, {\r\n        [field]: observable,\r\n        [field+'Error']: observable,\r\n      })\r\n    }\r\n  }\r\n  onNameChange = e => {\r\n    this.name = e.target.value;\r\n    this.nameError = false;\r\n  };\r\n  onGenderChange = value => {\r\n    this.gender = value;\r\n    this.genderError = false;\r\n  };\r\n  onHeightChange = value => {\r\n    this.height = value;\r\n    this.heightError = false;\r\n  };\r\n  onMassChange = value => {\r\n    this.mass = value;\r\n    this.massError = false;\r\n  };\r\n  setError = errorList => {\r\n    errorList.forEach(field => this[`${field}Error`] = true);\r\n  }\r\n}\r\n\r\ndecorate(FormStore, {\r\n  onNameChange: action,\r\n  onGenderChange: action,\r\n  onHeightChange: action,\r\n  onMassChange: action,\r\n  setError: action\r\n});\r\n\r\nconst validate = store => {\r\n  const errorList = fieldsList.filter(field => !store[field]);\r\n  store.setError(errorList);\r\n  return errorList.length === 0;\r\n};\r\n\r\nclass EditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.formStore = new FormStore(props.man);\r\n  };\r\n  handleOk = () => {\r\n    if (validate(this.formStore)) {\r\n      const resMan = {};\r\n      fieldsList.forEach(field => {\r\n        resMan[field] = this.formStore[field];\r\n      });\r\n      this.props.handleOk(resMan);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { visible, handleCancel, title } = this.props;\r\n    const { name, gender, height, mass } = this.formStore;\r\n    const { nameError, genderError, heightError, massError } = this.formStore;\r\n    const { onNameChange, onGenderChange, onHeightChange, onMassChange } = this.formStore;\r\n\r\n    return (\r\n      <Modal\r\n        title={title}\r\n        visible={visible}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Return\r\n          </Button>,\r\n          <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Row>\r\n          <Col span={6} className='ant-form-item-label'>\r\n            <label className='ant-form-item-required' htmlFor='name' title='name' style={{paddingBottom: 8}}>\r\n              Name\r\n            </label>\r\n          </Col>\r\n          <Col span={18}>\r\n            <Input id='name' defaultValue={name} onChange={onNameChange}/>\r\n            {nameError ? <Alert message=\"Please input name!\" type=\"error\" banner/> : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={6} className='ant-form-item-label'>\r\n            <label className='ant-form-item-required' htmlFor='gender' title='gender' style={{paddingBottom: 8}}>\r\n              Gender\r\n            </label>\r\n          </Col>\r\n          <Col span={18}>\r\n            <Select defaultValue={gender} style={{ width: 120 }} onChange={onGenderChange}>\r\n              <Option value=\"male\">male</Option>\r\n              <Option value=\"female\">female</Option>\r\n              <Option value=\"n/a\">n/a</Option>\r\n            </Select>\r\n            {genderError ? <Alert message=\"Please select gender!\" type=\"error\" banner/> : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={6} className='ant-form-item-label'>\r\n            <label className='ant-form-item-required' htmlFor = 'height' title = 'height' style={{paddingBottom: 8}}>\r\n              Height (cm)\r\n            </label>\r\n          </Col>\r\n          <Col span={18}>\r\n            <InputNumber id='height' min={0} max={10000} defaultValue={height} onChange={onHeightChange}/>\r\n            {heightError ? <Alert message=\"Please input height!\" type=\"error\" banner/> : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={6} className='ant-form-item-label'>\r\n              <label className='ant-form-item-required' htmlFor='mass' title = 'mass'>\r\n                Mass (kg)\r\n              </label>\r\n          </Col>\r\n          <Col span={18}>\r\n            <InputNumber id='mass' min={0} max={10000} defaultValue={mass} onChange={onMassChange}/>\r\n            {massError ? <Alert message=\"Please input mass!\" type=\"error\" banner/> : null}\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nobserver(EditForm);\r\nexport default EditForm;","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport EditForm from './EditForm'\r\n\r\nconst EditFormContainer = inject('peopleStore', 'viewStore')(observer(({ peopleStore,  viewStore}) =>\r\n  {\r\n    const { key, toggleVisibleEditForm, visibleEditForm } = viewStore;\r\n    if (!visibleEditForm) {\r\n      return null;\r\n    }\r\n    const addMan = man => {\r\n      toggleVisibleEditForm();\r\n      peopleStore.addMan(man);\r\n    };\r\n    const editMan = man => {\r\n      toggleVisibleEditForm();\r\n      peopleStore.editMan(key, man);\r\n    };\r\n    const handleOk = key ? editMan : addMan;\r\n\r\n    const handleCancel = () => {\r\n      toggleVisibleEditForm();\r\n    };\r\n\r\n    const title = key ? 'Edit profile' : 'Add profile';\r\n    const man = key ? peopleStore.getManByKey(key) : {};\r\n\r\n    return <EditForm\r\n      peopleStore = {peopleStore}\r\n      title = {title}\r\n      viewStore = {viewStore}\r\n      visible = {visibleEditForm}\r\n      handleOk = {handleOk}\r\n      handleCancel = {handleCancel}\r\n      man = {man}\r\n    />\r\n  }\r\n));\r\n\r\nexport default EditFormContainer;","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { Row, Col, Card, Button } from 'antd'\r\n\r\nclass CardContent extends React.Component {\r\n  render(){\r\n    const man = this.props.man;\r\n    return (\r\n      <>\r\n      {\r\n        this.props.fieldList.map((item, ind) =>\r\n          <div key={man[item]+man.key}>\r\n            {item}: {man[item]}\r\n          </div>\r\n        )\r\n      }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass PeopleCards extends React.Component {\r\n  render() {\r\n    const {dataSource, onEditClick} = this.props;\r\n    const rows = [[]];\r\n    let rowNum = 0;\r\n    let fieldList = this.props.fieldList;\r\n    const titleField = fieldList[0];\r\n    fieldList = fieldList.slice(1);\r\n\r\n    dataSource.forEach((item, ind) =>\r\n    {\r\n      if (ind % 3 === 0 && ind !== 0) {\r\n        rows[rowNum] =\r\n          <Row gutter={16} style={{ marginBottom: '20px' }} key={rowNum}>\r\n            {rows[rowNum]}\r\n          </Row>;\r\n        rows.push([]);\r\n        rowNum++;\r\n      }\r\n      rows[rowNum].push(\r\n        <Col span={8} key={item.key}>\r\n          <Card title={item[titleField]} bordered={false} extra={<Button icon=\"edit\" onClick={() => onEditClick(item.key)}/>}>\r\n            <CardContent\r\n              fieldList = {fieldList}\r\n              man = {item}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      );\r\n    });\r\n\r\n    if (rows[rowNum].length === 0) {\r\n      rows.shift();\r\n    } else {\r\n      rows[rowNum] =\r\n        <Row gutter={16} style={{ marginBottom: '20px' }} key={rowNum}>\r\n          {rows[rowNum]}\r\n        </Row>;\r\n    }\r\n    return (\r\n      <div style={{ padding: '20px 0 0 0' }}>\r\n        {rows}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nobserver(PeopleCards);\r\nobserver(CardContent);\r\n\r\nexport default PeopleCards;","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport PeopleCards from '../components/PeopleCards'\r\n\r\nconst CardListView = inject('peopleStore')(observer(({ peopleStore }) =>\r\n  {\r\n    if (!peopleStore.loaded){\r\n      return <div style={{paddingTop: '20px'}}>Загрузка</div>\r\n    }\r\n    const onEditManButtonClick = key => {\r\n      peopleStore.rootstore.viewStore.key = key;\r\n      peopleStore.rootstore.viewStore.toggleVisibleEditForm()\r\n    };\r\n    return (\r\n      <PeopleCards\r\n        dataSource = {peopleStore.people}\r\n        fieldList = {peopleStore.fieldList}\r\n        onEditClick = {onEditManButtonClick}\r\n      />\r\n    );\r\n  }\r\n));\r\n\r\nexport default CardListView;\r\n","import React from 'react'\r\nimport { Table, Input, Button, Icon } from 'antd'\r\nimport Highlighter from 'react-highlight-words';\r\nimport { observer } from 'mobx-react'\r\n\r\nclass SearchableTable extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.tableStore = props.tableStore;\r\n  }\r\n  onSelectChange = selectedRowKeys => {\r\n    this.tableStore.setSelectedRowKeys(selectedRowKeys);\r\n  };\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select());\r\n      }\r\n    },\r\n    render: (text, record, index) => {\r\n      if (text === record[this.tableStore.searchIndex]) {\r\n        return <Highlighter\r\n          highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n          searchWords={[this.tableStore.searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      }\r\n      return text;\r\n    },\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.tableStore.setSearchData(selectedKeys[0], dataIndex);\r\n    this.tableStore.setSelectedRowKeys([]);\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.tableStore.setSearchData('', '');\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys } = this.tableStore;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      hideDefaultSelections: true,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    let {columns, searchFields, ...restProps} = this.props;\r\n    columns = columns.map((item, ind) => {\r\n      if (searchFields.indexOf(ind) !== -1) {\r\n        return {\r\n          ...item,\r\n          ...this.getColumnSearchProps(item.key)\r\n        }\r\n      }\r\n      return {...item}\r\n    });\r\n    return (\r\n      <Table columns = {columns} rowSelection={rowSelection} {...restProps} />\r\n    );\r\n  }\r\n}\r\n\r\nobserver(SearchableTable);\r\n\r\nexport default SearchableTable;","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { Button } from 'antd'\r\n\r\nimport SearchableTable from \"../SearchableTable\";\r\n\r\nclass PeopleTable extends React.Component {\r\n  render() {\r\n    const { fieldList, people, peopleCount } = this.props.peopleStore;\r\n    const { tableStore, onDelButtonClick, onAddButtonClick } = this.props;\r\n    const columns = fieldList.map(field => {\r\n      return {\r\n        title: field,\r\n        dataIndex: field,\r\n        key: field\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div data-count={peopleCount}>\r\n        <div className=\"table-operations\" style={{ marginTop: 16, marginBottom: 16 }}>\r\n          <Button style={{marginRight: 8}} onClick={onAddButtonClick}>\r\n            Add\r\n          </Button>\r\n          <Button disabled={!tableStore.isSelected} onClick={onDelButtonClick}>\r\n            Delete\r\n          </Button>\r\n        </div>\r\n        <SearchableTable\r\n          dataSource ={people}\r\n          columns={columns}\r\n          tableStore = {tableStore}\r\n          searchFields = {[0, 2]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nobserver(PeopleTable);\r\n\r\nexport default PeopleTable;","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport PeopleTable from './PeopleTable'\r\n\r\nconst PeopleTableContainer = inject('peopleStore', 'peopleTableStore')(observer(({ peopleStore,  peopleTableStore}) =>\r\n  {\r\n    const onDelManButtonClick = () => {\r\n      const {selectedRowKeys, setSelectedRowKeys} = peopleTableStore;\r\n      peopleStore.delPeople(selectedRowKeys);\r\n      setSelectedRowKeys([]);\r\n    };\r\n    const onAddManButtonClick = () => {\r\n      peopleStore.rootstore.viewStore.key = '';\r\n      peopleStore.rootstore.viewStore.toggleVisibleEditForm()\r\n    };\r\n    return <PeopleTable\r\n      peopleStore={peopleStore}\r\n      tableStore={peopleTableStore}\r\n      onDelButtonClick={onDelManButtonClick}\r\n      onAddButtonClick={onAddManButtonClick}\r\n    />\r\n  }\r\n));\r\n\r\nexport default PeopleTableContainer;","import React from 'react'\r\nimport PeopleTableContainer from \"../components/PeopleTable\"\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\nconst PeopleTableView = inject('peopleStore')(observer(({ peopleStore}) => {\r\n  if (!peopleStore.loaded){\r\n    return <div style={{paddingTop: '20px'}}>Загрузка</div>\r\n  }\r\n  return <PeopleTableContainer/>;\r\n}));\r\n\r\n\r\nexport default PeopleTableView;\r\n","import React from 'react'\nimport { Layout } from 'antd'\nimport { Route, Switch } from 'react-router-dom'\nimport { observer } from \"mobx-react\";\n\nimport MainMenu from './components/MainMenu'\nimport EditFormContainer from \"./components/EditForm\"\nimport CardListView from \"./views/CardListView\"\nimport PeopleTableView from \"./views/PeopleTableView\"\nimport './App.css';\n\nconst { Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <div>\n      <EditFormContainer/>\n      <Layout className=\"layout\">\n        <Sider\n          style={{\n            overflow: 'auto',\n            height: '100vh',\n            position: 'fixed',\n            left: 0,\n          }}>\n          <MainMenu />\n        </Sider>\n        <Layout style={{ marginLeft: 200,  height: '100vh' }}>\n          <Content style={{ padding: '0 50px' }}>\n            <Switch>\n              <Route path=\"/cardlist\" component={CardListView} />\n              <Route path=\"/\" component={PeopleTableView} />\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\nobserver(App);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { HashRouter as Router} from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\nimport rootStore from \"./stores/rootStore\";\n\nReactDOM.render(\n  <Provider {...rootStore}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}